from django.db.models.signals import post_save
from django.dispatch import receiver
from .telegram_notify import send_telegram_message_sync
from .models import (
    CustomUser, PsychologistApplication, PsychologistProfile,
    PsychologistSessionRequest, QuickClientConsultationRequest
)
import logging
from asgiref.sync import async_to_sync

logger = logging.getLogger(__name__)

@receiver(post_save, sender=QuickClientConsultationRequest)
def update_consultation_count(sender, instance, **kwargs):
    if instance.status == 'COMPLETED' and instance.taken_by:
        instance.taken_by.update_requests_count()

@receiver(post_save, sender=PsychologistSessionRequest)
def update_session_count(sender, instance, **kwargs):
    if instance.status == 'COMPLETED' and instance.psychologist:
        instance.psychologist.update_requests_count()

@receiver(post_save, sender=CustomUser)
def handle_custom_user_post_save(sender, instance, created, **kwargs):
    """ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç –∑–∞—è–≤–∫—É –∏ –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∏–º –±—ã—Ç—å """
    if created and instance.wants_to_be_psychologist:
        PsychologistApplication.objects.get_or_create(user=instance)
        PsychologistProfile.objects.get_or_create(user=instance)
        logger.info(f"üß† –°–æ–∑–¥–∞–Ω—ã –∑–∞—è–≤–∫–∞ –∏ –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞ {instance.id}")
@receiver(post_save, sender=PsychologistApplication)
def handle_application_status_change(sender, instance, **kwargs):
    user = instance.user
    profile = PsychologistProfile.objects.filter(user=user).first()

    if not profile:
        logger.warning(f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è user_id={user.id} ‚Äî –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–æ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
        return

    if profile.application != instance:
        profile.application = instance
        profile.save(update_fields=["application"])

    if instance.status == 'APPROVED':
        user.is_psychologist = True
        user.save(update_fields=["is_psychologist"])
        profile.is_verified = True
        profile.save(update_fields=["is_verified"])
        message = "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!"
    elif instance.status == 'REJECTED':
        user.is_psychologist = False
        user.save(update_fields=["is_psychologist"])
        profile.is_verified = False
        profile.save(update_fields=["is_verified"])
        message = "‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
    else:
        return

    if user.telegram_id:
        try:
            send_telegram_message_sync(user.telegram_id, message)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")
    else:
        logger.warning(f"üö´ –ù–µ—Ç Telegram ID –¥–ª—è user_id={user.id}")