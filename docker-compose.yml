version: '3.9'

services:
  web:
    build: .
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers=4 --timeout=600
    volumes:
      - .:/app
      - ./static:/app/static
      - ./media:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - DJANGO_SETTINGS_MODULE=config.settings
    depends_on:
      - db
      - rabbitmq

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ailaq
      - POSTGRES_USER=aruka
      - POSTGRES_PASSWORD=aruka
    ports:
      - "5432:5432"

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/app/static
      - ./media:/app/media
    ports:
      - "8080:80"
    depends_on:
      - web

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  worker:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - DJANGO_SETTINGS_MODULE=config.settings
    depends_on:
      - web
      - rabbitmq
      - db

  beat:
    build: .
    command: celery -A config beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - DJANGO_SETTINGS_MODULE=config.settings
    depends_on:
      - worker
      - rabbitmq
      - db
    restart: on-failure

  telegram_bot:
    build: .
    command: python manage.py run_bot
    depends_on:
      - web
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings

volumes:
  postgres_data:
  rabbitmq_data: